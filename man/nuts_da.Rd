% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/NUTS.R
\name{nuts_da}
\alias{nuts_da}
\title{nuts_da}
\usage{
nuts_da(f, M, Madapt, theta0, delta = 0.6)
}
\arguments{
\item{f}{a function returning list with \code{list(logp=logp,grad=grad)}, \code{logp} being the loglikelihood and \code{grad} being its gradient}

\item{M}{the number of samples to generate}

\item{Madapt}{the number of steps of burn-in/how long to run the dual}

\item{theta0}{is a vector with the desired initial setting of the parameters.}

\item{delta}{hould be between 0 and 1, and is a target HMC acceptance probability. Defaults to 0.6 if unspecified.}
}
\value{
\code{list(samples=samples,epsilon=epsilon)}, samples being a matrix with columns parameters and rows samples
}
\description{
Function implementing the No-U-Turn Sampler (NUTS)
}
\details{
todo: more detail on arguments and provenance...epsilon
}
\examples{
rosenbrock <- function(x){
  f <- (1-x[1])^2 + 100*(x[2] - x[1]^2)^2
  g <- c(100*2*(x[2] - x[1]^2)*(-2)*x[1] - 2*(1-x[1]),
  200*(x[2] - x[1]^2) )
  return(list(logp=-f,grad=-g))
}

run <- nuts_da(rosenbrock,10*1e3,1e3,runif(2))

corplot(run$samples,labels=c('x','y'))
}
\author{
Pete Dodd
}

